// PLUGINS
apply plugin: 'java'
apply plugin: 'application'

// PARAMETER
def versionFile = 'version.properties'

mainClassName = 'roots.StartRoots'


// TASK: Build Version
task buildVersion {
	doLast {
  		Properties props = new Properties()
  		File propsFile = new File(versionFile)
  		props.load(propsFile.newDataInputStream())
  		Integer nextbuildnum = ( ((props.getProperty('BuildNumber')) as BigDecimal) + 1 )
  		props.setProperty('BuildNumber', nextbuildnum.toString())
  		props.store(propsFile.newWriter(), null)
  		
  		rootProject.version = props.getProperty('MajorRelease') + '-' + nextbuildnum + '-' + props.getProperty('DevState')
  		
  		println rootProject.version
  }
}

jar.dependsOn buildVersion

// MANIFEST
jar {
    manifest {
        attributes("Implementation-Title": rootProject.name,
                   "Implementation-Version": rootProject.version)
    }
}

// DEPENDENCIES
dependencies {
    compile "roots.entities:roots.entities:1.0"
    compile "roots.plugin:roots.plugin:1.0"
	compile fileTree(dir: 'lib/hibernate', include: ['*.jar'])
	compile fileTree(dir: 'lib/jdbc', include: ['*.jar'])
	compile fileTree(dir: 'lib/log4j', include: ['*.jar'])
	compile fileTree(dir: 'lib/lookandfeel', include: ['*.jar'])
	compile fileTree(dir: 'lib/swingx', include: ['*.jar'])
	compile fileTree(dir: '../roots.entities/lib/eclipselink-2.5.2', include: ['*.jar'])
}

// SOURCE SET
sourceSets {
    main {
            java {
            	srcDir 'src'
        	}
        	resources {
            	srcDir 'src' 
        	}
    	}
}
